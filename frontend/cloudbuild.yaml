# Cloud Build configuration for Dream Journal Frontend
# Deploys to Cloud Run using service configuration YAML

steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--no-cache'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/frontend:${SHORT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/frontend:latest'
      - './frontend'
    id: 'build-frontend'

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/frontend'
    id: 'push-frontend'
    waitFor: ['build-frontend']

  # Deploy Cloud Run service
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Set environment variables for envsubst
        export PROJECT_ID=${_PROJECT_ID}
        export REGION=${_REGION}
        export SHORT_SHA=${SHORT_SHA}

        # Install envsubst for variable substitution
        apt-get update && apt-get install -y gettext-base

        # Process and deploy service configuration
        echo "Processing frontend/cloud-run-service.yaml"
        envsubst < "frontend/cloud-run-service.yaml" | gcloud run services replace --region=${_REGION} --

        # Ensure service allows unauthenticated access (handled by load balancer)
        gcloud run services add-iam-policy-binding dream-journal-frontend \
          --region=${_REGION} \
          --member="allUsers" \
          --role="roles/run.invoker"
    id: 'deploy-service'
    waitFor: ['push-frontend']

# Substitutions (configure sensitive values in Cloud Build trigger)
substitutions:
  # _PROJECT_ID: Set this in Cloud Build trigger substitutions
  _REGION: 'us-central1'
  _REPOSITORY: 'dream-journal'

# Build options
options:
  machineType: 'E2_MEDIUM'
  substitution_option: 'ALLOW_LOOSE'
  logging: 'CLOUD_LOGGING_ONLY'

# Build timeout
timeout: '1200s'

# Images to be pushed to registry
images:
  - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/frontend:${SHORT_SHA}'
  - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/frontend:latest'
